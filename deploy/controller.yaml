---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-nfs-export-controller
  namespace: default
  labels:
    nfs-export.csi.k8s.io/server: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      nfs-export.csi.k8s.io/server: controller
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        nfs-export.csi.k8s.io/server: controller
    spec:
      terminationGracePeriodSeconds: 0
      hostNetwork: true  # controller also needs to mount nfs to create dir
      dnsPolicy: Default  # available values: Default, ClusterFirstWithHostNet, ClusterFirst
      serviceAccountName: csi-nfs-export-controller-sa
      nodeSelector:
        kubernetes.io/os: linux  # add "kubernetes.io/role: master" to run controller on master node
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/controlplane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: csi-provisioner
          image: daocloud.io/piraeus/csi-provisioner:v3.2.0
          args:
            - "-v=2"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--leader-election-namespace=$(NAMESPACE)"
            - "--extra-create-metadata=true"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources: {}
        # - name: csi-attacher
        #   image: daocloud.io/piraeus/csi-attacher:v3.5.0
        #   args:
        #     - "-v=2"
        #     - "--csi-address=$(ADDRESS)"
        #     - "--leader-election"
        #     - "--leader-election-namespace=$(NAMESPACE)"
        #   env:
        #     - name: ADDRESS
        #       value: /csi/csi.sock
        #   volumeMounts:
        #     - mountPath: /csi
        #       name: socket-dir
        - name: liveness-probe
          image: daocloud.io/piraeus/livenessprobe:v2.7.0
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=29652
            - --v=2
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          resources: {}
        - name: nfs-export
          image: daocloud.io/piraeus/csi-nfs-export-plugin:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          args:
            - "-v=5"
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
          env:   
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          ports:
            - containerPort: 29652
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          volumeMounts:
            - name: pods-mount-dir
              mountPath: /var/snap/microk8s/common/var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - mountPath: /csi
              name: socket-dir
          resources: {}
      volumes:
        - name: pods-mount-dir
          hostPath:
            path: /var/snap/microk8s/common/var/lib/kubelet/pods
            type: Directory
        - name: socket-dir
          emptyDir: {}